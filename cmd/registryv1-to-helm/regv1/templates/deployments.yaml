{{- $installNamespace := .Release.Namespace }}
{{- $annotations := .Values.csv.metadata.annotations -}}


{{- $supportedInstallModes := dict -}}
{{- range .Values.csv.spec.installModes -}}
  {{- if eq .supported true -}}{{- $_ := set $supportedInstallModes .type true -}}{{- end -}}
{{- end -}}

{{- if or (not (hasKey .Values "watchNamespaces")) (eq (len .Values.watchNamespaces) 0) -}}
  {{- if hasKey $supportedInstallModes "AllNamespaces" -}}
    {{- $_ := set $annotations "olm.targetNamespaces" "" -}}
  {{- else if hasKey $supportedInstallModes "OwnNamespace" -}}
    {{- $_ := set $annotations "olm.targetNamespaces" $installNamespace -}}
  {{- end -}}
{{- else -}}
  {{- with .Values.watchNamespaces -}}
    {{- if and (hasKey $supportedInstallModes "AllNamespaces") (and (eq (len .) 1) (eq (first .) "")) -}}
      {{- $_ := set $annotations "olm.targetNamespaces" "" -}}
    {{- else if and (hasKey $supportedInstallModes "OwnNamespace") (or (eq (len .) 0) (and (eq (len .) 1) (eq (first .) $installNamespace))) -}}
      {{- $_ := set $annotations "olm.targetNamespaces" $installNamespace -}}
    {{- else if and (hasKey $supportedInstallModes "SingleNamespace") (and (eq (len .) 1) (ne (first .) $installNamespace))  -}}
      {{- $_ := set $annotations "olm.targetNamespaces" .0 -}}
    {{- else if and (hasKey $supportedInstallModes "MultiNamespace") (gt (len .) 1) -}}
      {{- $_ := set $annotations "olm.targetNamespaces" (join "," .) -}}
    {{- else -}}
      {{- fail (printf "value for .Values.watchNamespaces %v is not compatible with install modes of the CSV %v in the install namespace %q" . (keys $supportedInstallModes) $installNamespace) -}}
    {{- end -}}
  {{- end -}}
{{- end -}}

{{- range .Values.csv.spec.install.spec.deployments -}}

{{- $depSpec := deepCopy .spec -}}
{{- $depAnnotations := dict }}
{{- $depSpecPatches := dict -}}
{{- $depSpecPatches = merge $depSpecPatches (dict "template" (dict "metadata" (dict "annotations" $annotations))) -}}
{{- with $.Values.affinity -}}
  {{- $_ := set $depSpec.template.spec "affinity" . -}}
{{- end -}}
{{- with $.Values.annotations -}}
  {{- $depSpecPatches = merge $depSpecPatches (dict "template" (dict "metadata" (dict "annotations" .))) -}}
  {{- $depAnnotations = merge $depAnnotations . -}}
{{- end -}}
{{- range $.Values.env -}}
  {{- range $depSpec.template.spec.containers -}}
    {{- range .env -}}
      {{- if eq .name (index $. 0) -}}
        {{- $_ := set . "value" (index $. 1) -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}
{{- end -}}
{{- with .envFrom -}}
{{- end -}}
{{- with .nodeSelector -}}
{{- end -}}
{{- with .resources -}}
{{- end -}}
{{- with .selector -}}
{{- end -}}
{{- with .tolerations -}}
{{- end -}}
{{- with .volumeMounts -}}
{{- end -}}
{{- with .volumes -}}
{{- end -}}

{{- $depSpec = merge $depSpec $depSpecPatches -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  {{- with .label }}
  labels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $depAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with $depSpec }}
  {{- toYaml . | nindent 2 }}
  {{- end }}

{{- end }}
